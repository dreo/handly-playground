Contributing to Handly
======================

Thanks for your interest in this project.

Project description:
--------------------

The Eclipse Handly project aims to provide a foundation for 
construction of handle-based models not unlike the JDT Java Model 
in their essential qualities. It borrows from core design patterns 
and principles used in the Java Model, but aims for a generalized 
albeit partial basic implementation, on top of which complete handle-
based models of diverse kinds could be built with relative ease. 
The project includes a layer of integration with Xtext.

- https://projects.eclipse.org/projects/technology.handly

Handly is very much a work in progress. The intent is to come up 
with a really nice design in that problem area through an open and 
transparent development process informed by community feedback.

Your participation would be much appreciated. Bugzilla can be used 
to provide suggestions for enhancements and (obviously) report bugs. 
Questions can be sent to the project's users forum or developers 
mailing list. Please see the details below about contributing to 
the project.

Developer resources:
--------------------

Information regarding source code management, builds, coding standards, 
and more.

- https://projects.eclipse.org/projects/technology.handly/developer

As well, the project Committer FAQ is available.

- https://wiki.eclipse.org/Handly/Committer_FAQ


Building locally:
-----------------

The build is based on Maven and Tycho and is easy to run on a local machine.

 1. Make sure you have JDK 6 and Maven 3 installed. Both should be on the path.
 2. Clone the Handly Git repository and pick the desired branch.
 3. Open a shell to the Git workspace and execute
    $ cd releng
    $ mvn clean install

Once the build completes, the `repository/target` folder will contain 
a repository of build artifacts.

Setting up a developer workspace:
---------------------------------

Handly currently uses `JavaSE-1.6` for compilation. Please add a matching JRE. 
Perfect match (i.e. JDK 1.6) is recommended to avoid build warnings.

Handly employs specific code formatting conventions. Please import and use 
the formatter profile from `tools/formatter.xml`.

Import all projects located in the root of your local clone of the Handly Git 
repository (don't search for nested projects) and set the target platform. 
We strongly recommend using the base target platform (as defined in the 
`targets/base/base.target` file) for building the workspace: it defines 
the base API level against which Handly must compile without errors.

Please note that for generation of Xtext-based language infrastructure to work, 
the developer tool and the target platform should contain Xtext of the same 
version. A simple way to achieve that is to install the developer tool from 
the file `tools/toolkit.p2f`, which is designed to be consistent with 
the base target platform.

Contributor License Agreement:
------------------------------

Before your contribution can be accepted by the project, you need to create 
and electronically sign the Eclipse Foundation Contributor License Agreement 
(CLA).

- http://www.eclipse.org/legal/CLA.php

Contact:
--------

Contact the project developers via the project's "dev" list.

- https://dev.eclipse.org/mailman/listinfo/handly-dev

Search for bugs:
----------------

This project uses Bugzilla to track ongoing development and issues.

- https://bugs.eclipse.org/bugs/buglist.cgi?product=Handly

Create a new bug:
-----------------

Be sure to search for existing bugs before you create another one. Remember 
that contributions are always welcome!

- https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Handly
